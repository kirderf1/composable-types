{-# LANGUAGE TemplateHaskell #-}
{-# LANGUAGE TypeOperators #-}
{-# LANGUAGE FlexibleContexts #-}
{-# LANGUAGE FlexibleInstances #-}
{-# LANGUAGE MultiParamTypeClasses #-}
{-# LANGUAGE UndecidableInstances #-}
module WrongNumberTyInds2 where
import qualified Data.Comp
import qualified Data.Comp.Derive
import qualified ComposableTypes

data B composable_types_recursive_var = C

composable_types_constructor_C :: ComposableTypes.PartOf B g => g
composable_types_constructor_C = ComposableTypes.inject' C

class Composable_types_inner_class_d f a b where
        composable_types_class_function_d ::
                                            (Composable_types_inner_class_d g a b) =>
                                            f (Data.Comp.Term g) -> a -> b

$(
  Data.Comp.Derive.derive [Data.Comp.Derive.liftSum]
    [''Composable_types_inner_class_d]
  )

class Composable_types_outer_class_d t a b where
        d :: t -> a -> b

instance Composable_types_inner_class_d g a b =>
         Composable_types_outer_class_d (Data.Comp.Term g) a b
         where
        d = composable_types_class_function_d . Data.Comp.unTerm

instance Composable_types_inner_class_d B Int where
        composable_types_class_function_d C = 1
